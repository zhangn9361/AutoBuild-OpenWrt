#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: eSirPlayground
# Youtube Channel: https://goo.gl/fvkdwm 
#=================================================

name: Build_x86_64_zn

on: 
  release:
    types: [published]

  #push:
  #  branches: 
  #    - master

  schedule:
    - cron: 5 0 * * 3
  
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 校验本地文件
      uses: actions/checkout@master

    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        set +e
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: 下载Lede源码
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        echo "src-git ssrp https://github.com/fw876/helloworld.git" >> ./feeds.conf.default
        
    - name: 升级 & 安装 feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a

    - name: 导入第三方插件
      working-directory: ./openwrt
      run: |
        git clone https://github.com/AlexZhuo/luci-app-bandwidthd.git package/luci-app-bandwidthd
        git clone https://github.com/esirplayground/luci-app-poweroff.git package/luci-app-poweroff
        git clone https://github.com/jerrykuku/luci-app-argon-config.git package/luci-app-argon-config
        git clone https://github.com/kenzok8/openwrt-packages.git package/openwrt-packages
        git clone https://github.com/kenzok8/small.git package/small
        git clone https://github.com/Lienol/openwrt-luci/tree/21.02/libs/luci-lib-ipkg package/luci-lib-ipkg
        git clone https://github.com/Lienol/openwrt-package.git package/Lienol
        git clone https://github.com/lisaac/luci-app-dockerman.git package/luci-app-dockerman
        #git clone https://github.com/sirpdboy/sirpdboy-package package/sirpdboy-package
        git clone https://github.com/LuttyYang/luci-theme-material.git package/luci-theme-material
        git clone https://github.com/linkease/istore.git package/luci-app-store
 
    - name: argon 主题
      working-directory: ./openwrt
      run: |
        git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git package/luci-theme-argon-jerrykuku
        
    - name: AppFilter 安装
      working-directory: ./openwrt
      run: |
        cd package
        git clone https://github.com/destan19/OpenAppFilter.git 
 
    - name: 配置自定义架构
      env:
        CONFIG_FILE: 'x86_64_zn.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && make defconfig
        
    - name: 下载插件包
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 构建固件
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

    - name : 上传固件
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt_x86_64_zn
        path: openwrt/bin
